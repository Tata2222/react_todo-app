{"version":3,"sources":["components/Todo.js","components/TodoList.js","components/Header.js","components/Footer.js","App.js","index.js"],"names":["Todo","id","title","completed","changeTodoStatus","deleteTodo","changeTodoValue","useState","isEdit","showTodoInput","editedTitle","changeInputValue","isError","showErrorClass","ref","useRef","handleClickOutside","e","current","contains","target","value","trim","changedTodoId","length","useEffect","focus","document","addEventListener","removeEventListener","className","classNames","editing","type","checked","onClick","htmlFor","onDoubleClick","error","autoComplete","onChange","onKeyDown","key","newTitle","TodoList","todos","map","todo","Header","initialInputValue","handleInputValue","addTodo","placeholder","onKeyPress","Footer","chooseTypeTodos","isActiveTodos","isAllTodos","isCompletedTodos","deleteCompletedTodos","isVisibleFooter","Boolean","isVisibleButton","filter","covert","href","selected","hidden","todosData","JSON","parse","localStorage","getItem","App","state","newTodoId","newTodo","setState","item","newId","task","toggleAllTodosStatus","isCompleted","some","setTypeTodos","setItem","stringify","this","isAllChecked","every","React","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.a1085dad.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst Todo = ({\n  id,\n  title,\n  completed,\n  changeTodoStatus,\n  deleteTodo,\n  changeTodoValue,\n}) => {\n  const [isEdit, showTodoInput] = useState(false);\n  const [editedTitle, changeInputValue] = useState(title);\n  const [isError, showErrorClass] = useState(false);\n  const ref = useRef();\n\n  const handleInputValue = (e) => {\n    const changedTodoId = +e.target.id;\n\n    if (e.key === 'Escape') {\n      showTodoInput(false);\n      showErrorClass(false);\n\n      return;\n    }\n\n    if (e.key === 'Enter') {\n      const newTitle = editedTitle.trim();\n\n      if (newTitle.length < 2 || newTitle.length > 30) {\n        showErrorClass(true);\n\n        return;\n      }\n\n      changeTodoValue(changedTodoId, newTitle);\n      showTodoInput(false);\n      showErrorClass(false);\n    }\n  };\n\n  const handleClickOutside = (e) => {\n    if (ref.current.contains(e.target)) {\n      return;\n    }\n\n    const value = ref.current.value.trim();\n    const changedTodoId = +ref.current.id;\n\n    if (value.length) {\n      if (value.length < 2 || value.length > 30) {\n        showErrorClass(true);\n\n        return;\n      }\n\n      changeTodoValue(changedTodoId, value);\n    }\n\n    showTodoInput(false);\n    showErrorClass(false);\n  };\n\n  useEffect(() => {\n    if (isEdit) {\n      ref.current.focus();\n    }\n  }, [isEdit]);\n\n  useEffect(() => {\n    document.addEventListener('click', handleClickOutside, true);\n\n    return () => {\n      document.removeEventListener('click', handleClickOutside, true);\n    };\n  }, []);\n\n  return (\n    <li className={classNames({\n      editing: isEdit, completed,\n    })}\n    >\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          id={id}\n          checked={completed}\n          onClick={() => changeTodoStatus(id)}\n        />\n        <label\n          htmlFor={id}\n          onDoubleClick={() => showTodoInput(true)}\n        >\n          {title}\n        </label>\n        <button\n          type=\"button\"\n          id={id}\n          className=\"destroy\"\n          onClick={() => deleteTodo(id)}\n        />\n      </div>\n      <input\n        type=\"text\"\n        className={classNames('edit', { error: isError })}\n        ref={ref}\n        id={id}\n        value={editedTitle}\n        autoComplete=\"off\"\n        onChange={e => changeInputValue(e.target.value)}\n        onKeyDown={handleInputValue}\n      />\n    </li>\n  );\n};\n\nTodo.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n  changeTodoStatus: PropTypes.func.isRequired,\n  changeTodoValue: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n};\n\nexport default Todo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Todo from './Todo';\n\nconst TodoList = ({ todos, changeTodoStatus, deleteTodo, changeTodoValue }) => (\n  <>\n    <ul className=\"todo-list\">\n      {todos.map(todo => (\n        <Todo\n          {...todo}\n          key={todo.id}\n          changeTodoStatus={changeTodoStatus}\n          deleteTodo={deleteTodo}\n          changeTodoValue={changeTodoValue}\n        />\n      ))}\n    </ul>\n  </>\n);\n\nTodoList.propTypes = {\n  changeTodoStatus: PropTypes.func.isRequired,\n  todos: PropTypes.arrayOf.isRequired,\n  changeTodoValue: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Header = ({ initialInputValue, handleInputValue, addTodo }) => (\n  <header className=\"header\">\n    <h1>todos</h1>\n\n    <input\n      className=\"new-todo\"\n      placeholder=\"What needs to be done?\"\n      value={initialInputValue}\n      onChange={handleInputValue}\n      onKeyPress={addTodo}\n    />\n  </header>\n);\n\nHeader.propTypes = {\n  addTodo: PropTypes.func.isRequired,\n  handleInputValue: PropTypes.func.isRequired,\n  initialInputValue: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst Footer = ({\n  todos,\n  chooseTypeTodos,\n  isActiveTodos,\n  isAllTodos,\n  isCompletedTodos,\n  deleteCompletedTodos,\n}) => {\n  const isVisibleFooter = Boolean(todos.length);\n  const isVisibleButton = Boolean(todos.filter(todo => todo.completed).length);\n\n  return (\n    <footer className={classNames('footer', { covert: !isVisibleFooter })}>\n      <span className=\"todo-count\">\n        {todos\n          .filter(todo => !todo.completed)\n          .length\n        }\n        {' '}\n        items left\n      </span>\n\n      <ul className=\"filters\">\n        <li>\n          <a\n            href=\"#/\"\n            title=\"all\"\n            className={classNames({ selected: isAllTodos })}\n            onClick={chooseTypeTodos}\n          >\n            All\n          </a>\n        </li>\n\n        <li>\n          <a\n            href=\"#/active\"\n            title=\"active\"\n            className={classNames({ selected: isActiveTodos })}\n            onClick={chooseTypeTodos}\n          >\n            Active\n          </a>\n        </li>\n\n        <li>\n          <a\n            href=\"#/completed\"\n            title=\"completed\"\n            className={classNames({ selected: isCompletedTodos })}\n            onClick={chooseTypeTodos}\n          >\n            Completed\n          </a>\n        </li>\n      </ul>\n\n      <button\n        type=\"button\"\n        className=\"clear-completed\"\n        onClick={deleteCompletedTodos}\n        hidden={!isVisibleButton}\n      >\n        Clear completed\n      </button>\n    </footer>\n  );\n};\n\nFooter.propTypes = {\n  chooseTypeTodos: PropTypes.func.isRequired,\n  deleteCompletedTodos: PropTypes.func.isRequired,\n  todos: PropTypes.arrayOf.isRequired,\n  isActiveTodos: PropTypes.string.isRequired,\n  isAllTodos: PropTypes.string.isRequired,\n  isCompletedTodos: PropTypes.string.isRequired,\n};\n\nexport default Footer;\n","import React from 'react';\nimport TodoList from './components/TodoList';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n\nconst todosData = JSON.parse(localStorage.getItem('todosData')) || [];\n\nclass App extends React.Component {\n  state={\n    todos: [...todosData],\n    newTodoId: todosData.length + 1 || 1,\n    initialInputValue: '',\n    isAllTodos: true,\n    isActiveTodos: false,\n    isCompletedTodos: false,\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem('todosData', JSON.stringify([...this.state.todos]));\n  }\n\n  addTodo = (e) => {\n    if (e.key !== 'Enter') {\n      return;\n    }\n\n    const newTodo = this.state.initialInputValue.trim();\n    const { newTodoId } = this.state;\n\n    if (newTodo) {\n      const todo = {\n        id: newTodoId,\n        title: newTodo,\n        completed: false,\n      };\n\n      this.setState(state => ({\n        todos: [...state.todos, todo],\n        newTodoId: state.newTodoId + 1,\n        initialInputValue: '',\n      }));\n    }\n  }\n\n  deleteTodo = (id) => {\n    this.setState(state => ({\n      todos: state.todos.filter(todo => todo.id !== id)\n        .map(item => (\n          (item.id > id)\n            ? {\n              ...item, id: item.id - 1,\n            }\n            : item\n        )),\n      newTodoId: state.todos.length,\n    }));\n  }\n\n  deleteCompletedTodos = () => {\n    let newId = 1;\n\n    this.setState(state => ({\n      todos: state.todos\n        .filter(todo => !todo.completed)\n        .map(task => ({\n        // eslint-disable-next-line\n          ...task, id: newId++,\n        })),\n    }));\n\n    this.setState(state => ({\n      newTodoId: state.todos.length + 1,\n    }));\n  }\n\n  changeTodoStatus = (id) => {\n    this.setState(state => ({\n      todos: state.todos.map(todo => (\n        (todo.id === id)\n          ? {\n            ...todo, completed: !todo.completed,\n          }\n          : todo\n      )),\n    }));\n  }\n\n  toggleAllTodosStatus = ({ target }) => {\n    const isCompleted = this.state.todos.some(todo => !todo.completed);\n\n    this.setState(state => ({\n      todos: state.todos.map(todo => ({\n        ...todo,\n        completed: isCompleted,\n      })),\n    }));\n  }\n\n  changeTodoValue = (id, newTitle) => {\n    this.setState(state => ({\n      todos: state.todos.map(todo => (\n        todo.id === id\n          ? {\n            ...todo, title: newTitle,\n          }\n          : todo\n      )),\n    }));\n  }\n\n  handleInputValue = (e) => {\n    const { value } = e.target;\n\n    this.setState({\n      initialInputValue: value,\n    });\n  }\n\n  chooseTypeTodos = (e) => {\n    const type = e.target.title;\n\n    switch (type) {\n      case 'all': {\n        this.setState({\n          isAllTodos: true,\n          isActiveTodos: false,\n          isCompletedTodos: false,\n        });\n        break;\n      }\n\n      case 'active': {\n        this.setState({\n          isAllTodos: false,\n          isActiveTodos: true,\n          isCompletedTodos: false,\n        });\n        break;\n      }\n\n      case 'completed': {\n        this.setState({\n          isAllTodos: false,\n          isActiveTodos: false,\n          isCompletedTodos: true,\n        });\n        break;\n      }\n\n      default: break;\n    }\n  }\n\n  setTypeTodos = (todo) => {\n    const { isActiveTodos, isCompletedTodos } = this.state;\n\n    if (isActiveTodos) {\n      return !todo.completed;\n    }\n\n    if (isCompletedTodos) {\n      return todo.completed;\n    }\n\n    return true;\n  }\n\n  render() {\n    const { todos, initialInputValue } = this.state;\n    const { isActiveTodos, isCompletedTodos, isAllTodos } = this.state;\n    const isAllChecked = todos.every(item => item.completed);\n\n    return (\n      <section className=\"todoapp\">\n        <Header\n          initialInputValue={initialInputValue}\n          handleInputValue={this.handleInputValue}\n          addTodo={this.addTodo}\n        />\n\n        <section className=\"main\">\n          {Boolean(todos.length) && (\n            <>\n              <input\n                type=\"checkbox\"\n                id=\"toggle-all\"\n                className=\"toggle-all\"\n                onClick={this.toggleAllTodosStatus}\n                checked={isAllChecked}\n              />\n              <label htmlFor=\"toggle-all\">Mark all as complete</label>\n            </>\n          )}\n\n          <TodoList\n            todos={todos.filter(this.setTypeTodos)}\n            changeTodoStatus={this.changeTodoStatus}\n            deleteTodo={this.deleteTodo}\n            changeTodoValue={this.changeTodoValue}\n          />\n        </section>\n\n        <Footer\n          todos={todos}\n          isAllTodos={isAllTodos}\n          isActiveTodos={isActiveTodos}\n          isCompletedTodos={isCompletedTodos}\n          chooseTypeTodos={this.chooseTypeTodos}\n          deleteCompletedTodos={this.deleteCompletedTodos}\n        />\n\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}